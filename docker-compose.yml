version: "3.8"

name: inbox-zero-services

services:
  db:
    image: postgres:15
    restart: always
    # Do NOT expose Postgres on the host in production unless you need external access.
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-inboxzero}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    volumes:
      - inboxzero_db_data:/var/lib/postgresql/data
    networks:
      - inbox-zero-network

  redis:
    image: redis:7
    restart: always
    # Redis is internal-only; DO NOT expose it to the host in production.
    volumes:
      - inboxzero_redis_data:/data
    networks:
      - inbox-zero-network

  serverless-redis-http:
    image: hiett/serverless-redis-http:latest
    restart: always
    # keep this internal; web will talk to it by service name
    env_file:
      - ./apps/web/.env
    environment:
      SRH_MODE: env
      SRH_TOKEN: ${UPSTASH_REDIS_TOKEN}
      # point to the internal redis service
      SRH_CONNECTION_STRING: "redis://redis:6379"
    networks:
      - inbox-zero-network

  web:
    image: ghcr.io/elie222/inbox-zero:latest
    pull_policy: if_not_present
    build:
      context: .
      dockerfile: ./docker/Dockerfile.prod
      args:
        NEXT_PUBLIC_BASE_URL: ${NEXT_PUBLIC_BASE_URL:-http://localhost:3000}
    env_file:
      - ./apps/web/.env
    depends_on:
      - db
      - redis
    # To make the app reachable to the host (and for Traefik/Coolify), keep this mapping.
    # Coolify will typically proxy your domain to this container's port 3000.
    ports:
      - ${WEB_PORT:-3000}:3000
    networks:
      - inbox-zero-network
    environment:
      DATABASE_URL: "postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@db:5432/${POSTGRES_DB:-inboxzero}?schema=public"
      DIRECT_URL: "postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@db:5432/${POSTGRES_DB:-inboxzero}?schema=public"
      UPSTASH_REDIS_URL: "http://serverless-redis-http:80"
      UPSTASH_REDIS_TOKEN: "${UPSTASH_REDIS_TOKEN}"

volumes:
  inboxzero_db_data:
  inboxzero_redis_data:

networks:
  inbox-zero-network:
    driver: bridge
