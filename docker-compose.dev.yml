name: inbox-zero-dev-services
services:
  db:
    image: postgres:15
    restart: always
    container_name: inbox-zero-dev-db
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-inboxzero}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
    volumes:
      - dev-database-data:/var/lib/postgresql/data/
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    networks:
      - inbox-zero-dev-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-inboxzero}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: inbox-zero-dev-redis
    ports:
      - ${REDIS_PORT:-6379}:6379
    volumes:
      - dev-redis-data:/data
    networks:
      - inbox-zero-dev-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  serverless-redis-http:
    ports:
      - "${REDIS_HTTP_PORT:-8079}:80"
    image: hiett/serverless-redis-http:latest
    container_name: inbox-zero-dev-redis-http
    environment:
      SRH_MODE: env
      SRH_TOKEN: ${UPSTASH_REDIS_TOKEN:-dev-token}
      SRH_CONNECTION_STRING: "redis://redis:6379"
    networks:
      - inbox-zero-dev-network
    depends_on:
      redis:
        condition: service_healthy

volumes:
  dev-database-data:
  dev-redis-data:

networks:
  inbox-zero-dev-network:
    driver: bridge
