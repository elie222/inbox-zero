FROM node:22-alpine

WORKDIR /app

# Install necessary tools
RUN apk add --no-cache openssl
RUN npm install -g pnpm

# Copy all package manager files first for caching
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml .npmrc* ./
COPY apps/web/package.json apps/web/
COPY apps/unsubscriber/package.json apps/unsubscriber/
COPY apps/mcp-server/package.json apps/mcp-server/
COPY packages/loops/package.json packages/loops/
COPY packages/resend/package.json packages/resend/
COPY packages/tinybird/package.json packages/tinybird/
COPY packages/tinybird-ai-analytics/package.json packages/tinybird-ai-analytics/
COPY packages/tsconfig/package.json packages/tsconfig/

# Install ALL dependencies (including dev, no pruning)
# This will now run postinstall scripts *after* source code is copied
RUN pnpm install --frozen-lockfile --prefer-offline --ignore-scripts

# Copy the rest of the application code FIRST
COPY . .


# Run Prisma generate with build-time variables (cached)
RUN pnpm --filter inbox-zero-ai exec -- prisma generate

# Set NODE_ENV for build and runtime
ENV NODE_ENV=production

# Provide dummy build-time ENV VARS (Still needed for build)
ENV DATABASE_URL="postgresql://dummy:dummy@dummy:5432/dummy?schema=public"
ENV DIRECT_URL="postgresql://dummy:dummy@dummy:5432/dummy?schema=public"
ENV AUTH_SECRET="dummy_secret_for_build_only"
ENV GOOGLE_CLIENT_ID="dummy_id_for_build_only"
ENV GOOGLE_CLIENT_SECRET="dummy_secret_for_build_only"
ENV EMAIL_ENCRYPT_SECRET="dummy_encrypt_secret_for_build_only"
ENV EMAIL_ENCRYPT_SALT="dummy_encrypt_salt_for_build_only"
ENV GOOGLE_PUBSUB_TOPIC_NAME="dummy_topic_for_build_only"
ENV GOOGLE_PUBSUB_VERIFICATION_TOKEN="dummy_pubsub_token_for_build"
ENV INTERNAL_API_KEY="dummy_apikey_for_build_only"
ENV API_KEY_SALT="dummy_salt_for_build_only"
ENV UPSTASH_REDIS_URL="http://dummy-redis-for-build:6379"
ENV UPSTASH_REDIS_TOKEN="dummy_redis_token_for_build"
ENV REDIS_URL="redis://dummy:dummy@dummy:6379"
ENV QSTASH_TOKEN="dummy_qstash_token_for_build"
ENV QSTASH_CURRENT_SIGNING_KEY="dummy_qstash_curr_key_for_build"
ENV QSTASH_NEXT_SIGNING_KEY="dummy_qstash_next_key_for_build"

# Ensure prisma generate runs
RUN pnpm --filter inbox-zero-ai exec -- next build

# Expose port 3000
EXPOSE 3000

# Set the default command to start the production server
# Use the simpler pnpm command, should work now as pnpm & next are installed
CMD pnpm --filter inbox-zero-ai start 